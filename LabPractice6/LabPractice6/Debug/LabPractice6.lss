
LabPractice6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000074c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006d8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800100  00800100  0000074c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000074c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000077c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000007bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a2b  00000000  00000000  000007f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000931  00000000  00000000  0000121f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000035b  00000000  00000000  00001b50  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000cc  00000000  00000000  00001eac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b1  00000000  00000000  00001f78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000162  00000000  00000000  00002429  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  0000258b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  2c:	0c 94 19 01 	jmp	0x232	; 0x232 <__vector_11>
  30:	0c 94 9e 00 	jmp	0x13c	; 0x13c <__vector_12>
  34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  38:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  54:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  68:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  6c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  70:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  74:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  78:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  7c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  80:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  84:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  88:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  8c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  90:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  94:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  98:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  9c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  ac:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  b0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_clear_bss>:
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	a5 30       	cpi	r26, 0x05	; 5
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	0e 94 87 00 	call	0x10e	; 0x10e <main>
  d4:	0c 94 6a 03 	jmp	0x6d4	; 0x6d4 <_exit>

000000d8 <__bad_interrupt>:
  d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <Timer1Init>:
{
	//WGM = Fast PWM w/ TOP at OCR1A = 1111
	//COM1B = 10, Clear OC1B on compare match, set on BOTTOM
	//CS1 = 11, prescaler = 64
	
	TCCR1A |= (1<<WGM10) | (1<<WGM11) | (1<<COM1B1);
  dc:	e0 e8       	ldi	r30, 0x80	; 128
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	83 62       	ori	r24, 0x23	; 35
  e4:	80 83       	st	Z, r24
	TCCR1B |= (1<<WGM12) | (1<<WGM13);
  e6:	e1 e8       	ldi	r30, 0x81	; 129
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	88 61       	ori	r24, 0x18	; 24
  ee:	80 83       	st	Z, r24
	OCR1A = 249;
  f0:	89 ef       	ldi	r24, 0xF9	; 249
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
  f8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	TIMSK1 |= (1<<OCIE1B) | (1<<OCIE1A); //Enable output compare B, A match interrupt
  fc:	af e6       	ldi	r26, 0x6F	; 111
  fe:	b0 e0       	ldi	r27, 0x00	; 0
 100:	8c 91       	ld	r24, X
 102:	86 60       	ori	r24, 0x06	; 6
 104:	8c 93       	st	X, r24
	TCCR1B |= (1<<CS11) | (1<<CS10);
 106:	80 81       	ld	r24, Z
 108:	83 60       	ori	r24, 0x03	; 3
 10a:	80 83       	st	Z, r24
 10c:	08 95       	ret

0000010e <main>:
}

int main(void)
{
	DDRB &= ~(1<<DDB7); // set PORTB 7 to input (SW1) 
 10e:	27 98       	cbi	0x04, 7	; 4
	DDRB &= ~(1<<DDB1); // set PORTB 1 to input (SW2)
 110:	21 98       	cbi	0x04, 1	; 4
	DDRB |= (1<<DDB2); // set PORTB 2 to output (OC1B)
 112:	22 9a       	sbi	0x04, 2	; 4
	DDRD |= (1<<DDD0); // set PORTD 0 to output.
 114:	50 9a       	sbi	0x0a, 0	; 10
	Timer1Init();
 116:	0e 94 6e 00 	call	0xdc	; 0xdc <Timer1Init>
	sei();
 11a:	78 94       	sei
		{
			increase_duty = 1;
		}
		else if(!(PINB & (1<<PINB1)))
		{
			decrease_duty = 1;
 11c:	81 e0       	ldi	r24, 0x01	; 1
	sei();
    /* Replace with your application code */
    while (1) 
    {
		//dutyCycle = (dutyCycle+10)%100;
		if(!(PINB & (1<<PINB7)))
 11e:	1f 99       	sbic	0x03, 7	; 3
 120:	03 c0       	rjmp	.+6      	; 0x128 <main+0x1a>
		{
			increase_duty = 1;
 122:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <increase_duty>
 126:	fb cf       	rjmp	.-10     	; 0x11e <main+0x10>
		}
		else if(!(PINB & (1<<PINB1)))
 128:	19 99       	sbic	0x03, 1	; 3
 12a:	03 c0       	rjmp	.+6      	; 0x132 <main+0x24>
		{
			decrease_duty = 1;
 12c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <decrease_duty>
 130:	f6 cf       	rjmp	.-20     	; 0x11e <main+0x10>
		}
		else
		{
			increase_duty=0;
 132:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <increase_duty>
			decrease_duty=0;
 136:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <decrease_duty>
 13a:	f1 cf       	rjmp	.-30     	; 0x11e <main+0x10>

0000013c <__vector_12>:
		}
    }
}

ISR(TIMER1_COMPB_vect)
{
 13c:	1f 92       	push	r1
 13e:	0f 92       	push	r0
 140:	0f b6       	in	r0, 0x3f	; 63
 142:	0f 92       	push	r0
 144:	11 24       	eor	r1, r1
 146:	cf 92       	push	r12
 148:	df 92       	push	r13
 14a:	ef 92       	push	r14
 14c:	ff 92       	push	r15
 14e:	2f 93       	push	r18
 150:	3f 93       	push	r19
 152:	4f 93       	push	r20
 154:	5f 93       	push	r21
 156:	6f 93       	push	r22
 158:	7f 93       	push	r23
 15a:	8f 93       	push	r24
 15c:	9f 93       	push	r25
 15e:	af 93       	push	r26
 160:	bf 93       	push	r27
 162:	cf 93       	push	r28
 164:	df 93       	push	r29
 166:	ef 93       	push	r30
 168:	ff 93       	push	r31
	LED_OFF;
 16a:	58 98       	cbi	0x0b, 0	; 11
	if(dutyCycle > 0)
 16c:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <dutyCycle>
 170:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <dutyCycle+0x1>
 174:	18 16       	cp	r1, r24
 176:	19 06       	cpc	r1, r25
 178:	ec f5       	brge	.+122    	; 0x1f4 <__vector_12+0xb8>
	{
		if(dutyCycle>100)
 17a:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <dutyCycle>
 17e:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <dutyCycle+0x1>
 182:	85 36       	cpi	r24, 0x65	; 101
 184:	91 05       	cpc	r25, r1
 186:	34 f0       	brlt	.+12     	; 0x194 <__vector_12+0x58>
			dutyCycle = 100;
 188:	84 e6       	ldi	r24, 0x64	; 100
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <dutyCycle+0x1>
 190:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <dutyCycle>
		OCR1B = (dutyCycle/100.0)*(OCR1A+1) - 1;
 194:	60 91 03 01 	lds	r22, 0x0103	; 0x800103 <dutyCycle>
 198:	70 91 04 01 	lds	r23, 0x0104	; 0x800104 <dutyCycle+0x1>
 19c:	c0 91 88 00 	lds	r28, 0x0088	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
 1a0:	d0 91 89 00 	lds	r29, 0x0089	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 1a4:	07 2e       	mov	r0, r23
 1a6:	00 0c       	add	r0, r0
 1a8:	88 0b       	sbc	r24, r24
 1aa:	99 0b       	sbc	r25, r25
 1ac:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__floatsisf>
 1b0:	20 e0       	ldi	r18, 0x00	; 0
 1b2:	30 e0       	ldi	r19, 0x00	; 0
 1b4:	48 ec       	ldi	r20, 0xC8	; 200
 1b6:	52 e4       	ldi	r21, 0x42	; 66
 1b8:	0e 94 ce 01 	call	0x39c	; 0x39c <__divsf3>
 1bc:	6b 01       	movw	r12, r22
 1be:	7c 01       	movw	r14, r24
 1c0:	be 01       	movw	r22, r28
 1c2:	6f 5f       	subi	r22, 0xFF	; 255
 1c4:	7f 4f       	sbci	r23, 0xFF	; 255
 1c6:	80 e0       	ldi	r24, 0x00	; 0
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	0e 94 6f 02 	call	0x4de	; 0x4de <__floatunsisf>
 1ce:	9b 01       	movw	r18, r22
 1d0:	ac 01       	movw	r20, r24
 1d2:	c7 01       	movw	r24, r14
 1d4:	b6 01       	movw	r22, r12
 1d6:	0e 94 fd 02 	call	0x5fa	; 0x5fa <__mulsf3>
 1da:	20 e0       	ldi	r18, 0x00	; 0
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	40 e8       	ldi	r20, 0x80	; 128
 1e0:	5f e3       	ldi	r21, 0x3F	; 63
 1e2:	0e 94 61 01 	call	0x2c2	; 0x2c2 <__subsf3>
 1e6:	0e 94 40 02 	call	0x480	; 0x480 <__fixunssfsi>
 1ea:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
 1ee:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
 1f2:	08 c0       	rjmp	.+16     	; 0x204 <__vector_12+0xc8>
	}
	else
	{
		OCR1B = 0;
 1f4:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
 1f8:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
		dutyCycle = 0;
 1fc:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <dutyCycle+0x1>
 200:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <dutyCycle>
	}
		
}
 204:	ff 91       	pop	r31
 206:	ef 91       	pop	r30
 208:	df 91       	pop	r29
 20a:	cf 91       	pop	r28
 20c:	bf 91       	pop	r27
 20e:	af 91       	pop	r26
 210:	9f 91       	pop	r25
 212:	8f 91       	pop	r24
 214:	7f 91       	pop	r23
 216:	6f 91       	pop	r22
 218:	5f 91       	pop	r21
 21a:	4f 91       	pop	r20
 21c:	3f 91       	pop	r19
 21e:	2f 91       	pop	r18
 220:	ff 90       	pop	r15
 222:	ef 90       	pop	r14
 224:	df 90       	pop	r13
 226:	cf 90       	pop	r12
 228:	0f 90       	pop	r0
 22a:	0f be       	out	0x3f, r0	; 63
 22c:	0f 90       	pop	r0
 22e:	1f 90       	pop	r1
 230:	18 95       	reti

00000232 <__vector_11>:

ISR(TIMER1_COMPA_vect)
{
 232:	1f 92       	push	r1
 234:	0f 92       	push	r0
 236:	0f b6       	in	r0, 0x3f	; 63
 238:	0f 92       	push	r0
 23a:	11 24       	eor	r1, r1
 23c:	8f 93       	push	r24
 23e:	9f 93       	push	r25
	LED_ON;
 240:	58 9a       	sbi	0x0b, 0	; 11
	if(count==100)
 242:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 246:	84 36       	cpi	r24, 0x64	; 100
 248:	81 f5       	brne	.+96     	; 0x2aa <__vector_11+0x78>
	{
		if(increase_duty)
 24a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <increase_duty>
 24e:	88 23       	and	r24, r24
 250:	99 f0       	breq	.+38     	; 0x278 <__vector_11+0x46>
		{
			if(dutyCycle<100)
 252:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <dutyCycle>
 256:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <dutyCycle+0x1>
 25a:	84 36       	cpi	r24, 0x64	; 100
 25c:	91 05       	cpc	r25, r1
 25e:	4c f4       	brge	.+18     	; 0x272 <__vector_11+0x40>
				dutyCycle++;
 260:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <dutyCycle>
 264:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <dutyCycle+0x1>
 268:	01 96       	adiw	r24, 0x01	; 1
 26a:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <dutyCycle+0x1>
 26e:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <dutyCycle>
			increase_duty = 0;
 272:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <increase_duty>
 276:	16 c0       	rjmp	.+44     	; 0x2a4 <__vector_11+0x72>
		}
		else if(decrease_duty)
 278:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <decrease_duty>
 27c:	88 23       	and	r24, r24
 27e:	91 f0       	breq	.+36     	; 0x2a4 <__vector_11+0x72>
		{
			if(dutyCycle>0)
 280:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <dutyCycle>
 284:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <dutyCycle+0x1>
 288:	18 16       	cp	r1, r24
 28a:	19 06       	cpc	r1, r25
 28c:	4c f4       	brge	.+18     	; 0x2a0 <__vector_11+0x6e>
				dutyCycle--;
 28e:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <dutyCycle>
 292:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <dutyCycle+0x1>
 296:	01 97       	sbiw	r24, 0x01	; 1
 298:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <dutyCycle+0x1>
 29c:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <dutyCycle>
			decrease_duty = 0;
 2a0:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <decrease_duty>
		}
		count = -1;
 2a4:	8f ef       	ldi	r24, 0xFF	; 255
 2a6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	}
	count++;
 2aa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 2ae:	8f 5f       	subi	r24, 0xFF	; 255
 2b0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
}
 2b4:	9f 91       	pop	r25
 2b6:	8f 91       	pop	r24
 2b8:	0f 90       	pop	r0
 2ba:	0f be       	out	0x3f, r0	; 63
 2bc:	0f 90       	pop	r0
 2be:	1f 90       	pop	r1
 2c0:	18 95       	reti

000002c2 <__subsf3>:
 2c2:	50 58       	subi	r21, 0x80	; 128

000002c4 <__addsf3>:
 2c4:	bb 27       	eor	r27, r27
 2c6:	aa 27       	eor	r26, r26
 2c8:	0e 94 79 01 	call	0x2f2	; 0x2f2 <__addsf3x>
 2cc:	0c 94 c3 02 	jmp	0x586	; 0x586 <__fp_round>
 2d0:	0e 94 b5 02 	call	0x56a	; 0x56a <__fp_pscA>
 2d4:	38 f0       	brcs	.+14     	; 0x2e4 <__addsf3+0x20>
 2d6:	0e 94 bc 02 	call	0x578	; 0x578 <__fp_pscB>
 2da:	20 f0       	brcs	.+8      	; 0x2e4 <__addsf3+0x20>
 2dc:	39 f4       	brne	.+14     	; 0x2ec <__addsf3+0x28>
 2de:	9f 3f       	cpi	r25, 0xFF	; 255
 2e0:	19 f4       	brne	.+6      	; 0x2e8 <__addsf3+0x24>
 2e2:	26 f4       	brtc	.+8      	; 0x2ec <__addsf3+0x28>
 2e4:	0c 94 b2 02 	jmp	0x564	; 0x564 <__fp_nan>
 2e8:	0e f4       	brtc	.+2      	; 0x2ec <__addsf3+0x28>
 2ea:	e0 95       	com	r30
 2ec:	e7 fb       	bst	r30, 7
 2ee:	0c 94 ac 02 	jmp	0x558	; 0x558 <__fp_inf>

000002f2 <__addsf3x>:
 2f2:	e9 2f       	mov	r30, r25
 2f4:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__fp_split3>
 2f8:	58 f3       	brcs	.-42     	; 0x2d0 <__addsf3+0xc>
 2fa:	ba 17       	cp	r27, r26
 2fc:	62 07       	cpc	r22, r18
 2fe:	73 07       	cpc	r23, r19
 300:	84 07       	cpc	r24, r20
 302:	95 07       	cpc	r25, r21
 304:	20 f0       	brcs	.+8      	; 0x30e <__addsf3x+0x1c>
 306:	79 f4       	brne	.+30     	; 0x326 <__addsf3x+0x34>
 308:	a6 f5       	brtc	.+104    	; 0x372 <__addsf3x+0x80>
 30a:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__fp_zero>
 30e:	0e f4       	brtc	.+2      	; 0x312 <__addsf3x+0x20>
 310:	e0 95       	com	r30
 312:	0b 2e       	mov	r0, r27
 314:	ba 2f       	mov	r27, r26
 316:	a0 2d       	mov	r26, r0
 318:	0b 01       	movw	r0, r22
 31a:	b9 01       	movw	r22, r18
 31c:	90 01       	movw	r18, r0
 31e:	0c 01       	movw	r0, r24
 320:	ca 01       	movw	r24, r20
 322:	a0 01       	movw	r20, r0
 324:	11 24       	eor	r1, r1
 326:	ff 27       	eor	r31, r31
 328:	59 1b       	sub	r21, r25
 32a:	99 f0       	breq	.+38     	; 0x352 <__addsf3x+0x60>
 32c:	59 3f       	cpi	r21, 0xF9	; 249
 32e:	50 f4       	brcc	.+20     	; 0x344 <__addsf3x+0x52>
 330:	50 3e       	cpi	r21, 0xE0	; 224
 332:	68 f1       	brcs	.+90     	; 0x38e <__addsf3x+0x9c>
 334:	1a 16       	cp	r1, r26
 336:	f0 40       	sbci	r31, 0x00	; 0
 338:	a2 2f       	mov	r26, r18
 33a:	23 2f       	mov	r18, r19
 33c:	34 2f       	mov	r19, r20
 33e:	44 27       	eor	r20, r20
 340:	58 5f       	subi	r21, 0xF8	; 248
 342:	f3 cf       	rjmp	.-26     	; 0x32a <__addsf3x+0x38>
 344:	46 95       	lsr	r20
 346:	37 95       	ror	r19
 348:	27 95       	ror	r18
 34a:	a7 95       	ror	r26
 34c:	f0 40       	sbci	r31, 0x00	; 0
 34e:	53 95       	inc	r21
 350:	c9 f7       	brne	.-14     	; 0x344 <__addsf3x+0x52>
 352:	7e f4       	brtc	.+30     	; 0x372 <__addsf3x+0x80>
 354:	1f 16       	cp	r1, r31
 356:	ba 0b       	sbc	r27, r26
 358:	62 0b       	sbc	r22, r18
 35a:	73 0b       	sbc	r23, r19
 35c:	84 0b       	sbc	r24, r20
 35e:	ba f0       	brmi	.+46     	; 0x38e <__addsf3x+0x9c>
 360:	91 50       	subi	r25, 0x01	; 1
 362:	a1 f0       	breq	.+40     	; 0x38c <__addsf3x+0x9a>
 364:	ff 0f       	add	r31, r31
 366:	bb 1f       	adc	r27, r27
 368:	66 1f       	adc	r22, r22
 36a:	77 1f       	adc	r23, r23
 36c:	88 1f       	adc	r24, r24
 36e:	c2 f7       	brpl	.-16     	; 0x360 <__addsf3x+0x6e>
 370:	0e c0       	rjmp	.+28     	; 0x38e <__addsf3x+0x9c>
 372:	ba 0f       	add	r27, r26
 374:	62 1f       	adc	r22, r18
 376:	73 1f       	adc	r23, r19
 378:	84 1f       	adc	r24, r20
 37a:	48 f4       	brcc	.+18     	; 0x38e <__addsf3x+0x9c>
 37c:	87 95       	ror	r24
 37e:	77 95       	ror	r23
 380:	67 95       	ror	r22
 382:	b7 95       	ror	r27
 384:	f7 95       	ror	r31
 386:	9e 3f       	cpi	r25, 0xFE	; 254
 388:	08 f0       	brcs	.+2      	; 0x38c <__addsf3x+0x9a>
 38a:	b0 cf       	rjmp	.-160    	; 0x2ec <__addsf3+0x28>
 38c:	93 95       	inc	r25
 38e:	88 0f       	add	r24, r24
 390:	08 f0       	brcs	.+2      	; 0x394 <__addsf3x+0xa2>
 392:	99 27       	eor	r25, r25
 394:	ee 0f       	add	r30, r30
 396:	97 95       	ror	r25
 398:	87 95       	ror	r24
 39a:	08 95       	ret

0000039c <__divsf3>:
 39c:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <__divsf3x>
 3a0:	0c 94 c3 02 	jmp	0x586	; 0x586 <__fp_round>
 3a4:	0e 94 bc 02 	call	0x578	; 0x578 <__fp_pscB>
 3a8:	58 f0       	brcs	.+22     	; 0x3c0 <__divsf3+0x24>
 3aa:	0e 94 b5 02 	call	0x56a	; 0x56a <__fp_pscA>
 3ae:	40 f0       	brcs	.+16     	; 0x3c0 <__divsf3+0x24>
 3b0:	29 f4       	brne	.+10     	; 0x3bc <__divsf3+0x20>
 3b2:	5f 3f       	cpi	r21, 0xFF	; 255
 3b4:	29 f0       	breq	.+10     	; 0x3c0 <__divsf3+0x24>
 3b6:	0c 94 ac 02 	jmp	0x558	; 0x558 <__fp_inf>
 3ba:	51 11       	cpse	r21, r1
 3bc:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_szero>
 3c0:	0c 94 b2 02 	jmp	0x564	; 0x564 <__fp_nan>

000003c4 <__divsf3x>:
 3c4:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__fp_split3>
 3c8:	68 f3       	brcs	.-38     	; 0x3a4 <__divsf3+0x8>

000003ca <__divsf3_pse>:
 3ca:	99 23       	and	r25, r25
 3cc:	b1 f3       	breq	.-20     	; 0x3ba <__divsf3+0x1e>
 3ce:	55 23       	and	r21, r21
 3d0:	91 f3       	breq	.-28     	; 0x3b6 <__divsf3+0x1a>
 3d2:	95 1b       	sub	r25, r21
 3d4:	55 0b       	sbc	r21, r21
 3d6:	bb 27       	eor	r27, r27
 3d8:	aa 27       	eor	r26, r26
 3da:	62 17       	cp	r22, r18
 3dc:	73 07       	cpc	r23, r19
 3de:	84 07       	cpc	r24, r20
 3e0:	38 f0       	brcs	.+14     	; 0x3f0 <__divsf3_pse+0x26>
 3e2:	9f 5f       	subi	r25, 0xFF	; 255
 3e4:	5f 4f       	sbci	r21, 0xFF	; 255
 3e6:	22 0f       	add	r18, r18
 3e8:	33 1f       	adc	r19, r19
 3ea:	44 1f       	adc	r20, r20
 3ec:	aa 1f       	adc	r26, r26
 3ee:	a9 f3       	breq	.-22     	; 0x3da <__divsf3_pse+0x10>
 3f0:	35 d0       	rcall	.+106    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 3f2:	0e 2e       	mov	r0, r30
 3f4:	3a f0       	brmi	.+14     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f6:	e0 e8       	ldi	r30, 0x80	; 128
 3f8:	32 d0       	rcall	.+100    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 3fa:	91 50       	subi	r25, 0x01	; 1
 3fc:	50 40       	sbci	r21, 0x00	; 0
 3fe:	e6 95       	lsr	r30
 400:	00 1c       	adc	r0, r0
 402:	ca f7       	brpl	.-14     	; 0x3f6 <__divsf3_pse+0x2c>
 404:	2b d0       	rcall	.+86     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 406:	fe 2f       	mov	r31, r30
 408:	29 d0       	rcall	.+82     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 40a:	66 0f       	add	r22, r22
 40c:	77 1f       	adc	r23, r23
 40e:	88 1f       	adc	r24, r24
 410:	bb 1f       	adc	r27, r27
 412:	26 17       	cp	r18, r22
 414:	37 07       	cpc	r19, r23
 416:	48 07       	cpc	r20, r24
 418:	ab 07       	cpc	r26, r27
 41a:	b0 e8       	ldi	r27, 0x80	; 128
 41c:	09 f0       	breq	.+2      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 41e:	bb 0b       	sbc	r27, r27
 420:	80 2d       	mov	r24, r0
 422:	bf 01       	movw	r22, r30
 424:	ff 27       	eor	r31, r31
 426:	93 58       	subi	r25, 0x83	; 131
 428:	5f 4f       	sbci	r21, 0xFF	; 255
 42a:	3a f0       	brmi	.+14     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 42c:	9e 3f       	cpi	r25, 0xFE	; 254
 42e:	51 05       	cpc	r21, r1
 430:	78 f0       	brcs	.+30     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 432:	0c 94 ac 02 	jmp	0x558	; 0x558 <__fp_inf>
 436:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_szero>
 43a:	5f 3f       	cpi	r21, 0xFF	; 255
 43c:	e4 f3       	brlt	.-8      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 43e:	98 3e       	cpi	r25, 0xE8	; 232
 440:	d4 f3       	brlt	.-12     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 442:	86 95       	lsr	r24
 444:	77 95       	ror	r23
 446:	67 95       	ror	r22
 448:	b7 95       	ror	r27
 44a:	f7 95       	ror	r31
 44c:	9f 5f       	subi	r25, 0xFF	; 255
 44e:	c9 f7       	brne	.-14     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 450:	88 0f       	add	r24, r24
 452:	91 1d       	adc	r25, r1
 454:	96 95       	lsr	r25
 456:	87 95       	ror	r24
 458:	97 f9       	bld	r25, 7
 45a:	08 95       	ret
 45c:	e1 e0       	ldi	r30, 0x01	; 1
 45e:	66 0f       	add	r22, r22
 460:	77 1f       	adc	r23, r23
 462:	88 1f       	adc	r24, r24
 464:	bb 1f       	adc	r27, r27
 466:	62 17       	cp	r22, r18
 468:	73 07       	cpc	r23, r19
 46a:	84 07       	cpc	r24, r20
 46c:	ba 07       	cpc	r27, r26
 46e:	20 f0       	brcs	.+8      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 470:	62 1b       	sub	r22, r18
 472:	73 0b       	sbc	r23, r19
 474:	84 0b       	sbc	r24, r20
 476:	ba 0b       	sbc	r27, r26
 478:	ee 1f       	adc	r30, r30
 47a:	88 f7       	brcc	.-30     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 47c:	e0 95       	com	r30
 47e:	08 95       	ret

00000480 <__fixunssfsi>:
 480:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__fp_splitA>
 484:	88 f0       	brcs	.+34     	; 0x4a8 <__fixunssfsi+0x28>
 486:	9f 57       	subi	r25, 0x7F	; 127
 488:	98 f0       	brcs	.+38     	; 0x4b0 <__fixunssfsi+0x30>
 48a:	b9 2f       	mov	r27, r25
 48c:	99 27       	eor	r25, r25
 48e:	b7 51       	subi	r27, 0x17	; 23
 490:	b0 f0       	brcs	.+44     	; 0x4be <__fixunssfsi+0x3e>
 492:	e1 f0       	breq	.+56     	; 0x4cc <__fixunssfsi+0x4c>
 494:	66 0f       	add	r22, r22
 496:	77 1f       	adc	r23, r23
 498:	88 1f       	adc	r24, r24
 49a:	99 1f       	adc	r25, r25
 49c:	1a f0       	brmi	.+6      	; 0x4a4 <__fixunssfsi+0x24>
 49e:	ba 95       	dec	r27
 4a0:	c9 f7       	brne	.-14     	; 0x494 <__fixunssfsi+0x14>
 4a2:	14 c0       	rjmp	.+40     	; 0x4cc <__fixunssfsi+0x4c>
 4a4:	b1 30       	cpi	r27, 0x01	; 1
 4a6:	91 f0       	breq	.+36     	; 0x4cc <__fixunssfsi+0x4c>
 4a8:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__fp_zero>
 4ac:	b1 e0       	ldi	r27, 0x01	; 1
 4ae:	08 95       	ret
 4b0:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__fp_zero>
 4b4:	67 2f       	mov	r22, r23
 4b6:	78 2f       	mov	r23, r24
 4b8:	88 27       	eor	r24, r24
 4ba:	b8 5f       	subi	r27, 0xF8	; 248
 4bc:	39 f0       	breq	.+14     	; 0x4cc <__fixunssfsi+0x4c>
 4be:	b9 3f       	cpi	r27, 0xF9	; 249
 4c0:	cc f3       	brlt	.-14     	; 0x4b4 <__fixunssfsi+0x34>
 4c2:	86 95       	lsr	r24
 4c4:	77 95       	ror	r23
 4c6:	67 95       	ror	r22
 4c8:	b3 95       	inc	r27
 4ca:	d9 f7       	brne	.-10     	; 0x4c2 <__fixunssfsi+0x42>
 4cc:	3e f4       	brtc	.+14     	; 0x4dc <__fixunssfsi+0x5c>
 4ce:	90 95       	com	r25
 4d0:	80 95       	com	r24
 4d2:	70 95       	com	r23
 4d4:	61 95       	neg	r22
 4d6:	7f 4f       	sbci	r23, 0xFF	; 255
 4d8:	8f 4f       	sbci	r24, 0xFF	; 255
 4da:	9f 4f       	sbci	r25, 0xFF	; 255
 4dc:	08 95       	ret

000004de <__floatunsisf>:
 4de:	e8 94       	clt
 4e0:	09 c0       	rjmp	.+18     	; 0x4f4 <__floatsisf+0x12>

000004e2 <__floatsisf>:
 4e2:	97 fb       	bst	r25, 7
 4e4:	3e f4       	brtc	.+14     	; 0x4f4 <__floatsisf+0x12>
 4e6:	90 95       	com	r25
 4e8:	80 95       	com	r24
 4ea:	70 95       	com	r23
 4ec:	61 95       	neg	r22
 4ee:	7f 4f       	sbci	r23, 0xFF	; 255
 4f0:	8f 4f       	sbci	r24, 0xFF	; 255
 4f2:	9f 4f       	sbci	r25, 0xFF	; 255
 4f4:	99 23       	and	r25, r25
 4f6:	a9 f0       	breq	.+42     	; 0x522 <__floatsisf+0x40>
 4f8:	f9 2f       	mov	r31, r25
 4fa:	96 e9       	ldi	r25, 0x96	; 150
 4fc:	bb 27       	eor	r27, r27
 4fe:	93 95       	inc	r25
 500:	f6 95       	lsr	r31
 502:	87 95       	ror	r24
 504:	77 95       	ror	r23
 506:	67 95       	ror	r22
 508:	b7 95       	ror	r27
 50a:	f1 11       	cpse	r31, r1
 50c:	f8 cf       	rjmp	.-16     	; 0x4fe <__floatsisf+0x1c>
 50e:	fa f4       	brpl	.+62     	; 0x54e <__floatsisf+0x6c>
 510:	bb 0f       	add	r27, r27
 512:	11 f4       	brne	.+4      	; 0x518 <__floatsisf+0x36>
 514:	60 ff       	sbrs	r22, 0
 516:	1b c0       	rjmp	.+54     	; 0x54e <__floatsisf+0x6c>
 518:	6f 5f       	subi	r22, 0xFF	; 255
 51a:	7f 4f       	sbci	r23, 0xFF	; 255
 51c:	8f 4f       	sbci	r24, 0xFF	; 255
 51e:	9f 4f       	sbci	r25, 0xFF	; 255
 520:	16 c0       	rjmp	.+44     	; 0x54e <__floatsisf+0x6c>
 522:	88 23       	and	r24, r24
 524:	11 f0       	breq	.+4      	; 0x52a <__floatsisf+0x48>
 526:	96 e9       	ldi	r25, 0x96	; 150
 528:	11 c0       	rjmp	.+34     	; 0x54c <__floatsisf+0x6a>
 52a:	77 23       	and	r23, r23
 52c:	21 f0       	breq	.+8      	; 0x536 <__floatsisf+0x54>
 52e:	9e e8       	ldi	r25, 0x8E	; 142
 530:	87 2f       	mov	r24, r23
 532:	76 2f       	mov	r23, r22
 534:	05 c0       	rjmp	.+10     	; 0x540 <__floatsisf+0x5e>
 536:	66 23       	and	r22, r22
 538:	71 f0       	breq	.+28     	; 0x556 <__floatsisf+0x74>
 53a:	96 e8       	ldi	r25, 0x86	; 134
 53c:	86 2f       	mov	r24, r22
 53e:	70 e0       	ldi	r23, 0x00	; 0
 540:	60 e0       	ldi	r22, 0x00	; 0
 542:	2a f0       	brmi	.+10     	; 0x54e <__floatsisf+0x6c>
 544:	9a 95       	dec	r25
 546:	66 0f       	add	r22, r22
 548:	77 1f       	adc	r23, r23
 54a:	88 1f       	adc	r24, r24
 54c:	da f7       	brpl	.-10     	; 0x544 <__floatsisf+0x62>
 54e:	88 0f       	add	r24, r24
 550:	96 95       	lsr	r25
 552:	87 95       	ror	r24
 554:	97 f9       	bld	r25, 7
 556:	08 95       	ret

00000558 <__fp_inf>:
 558:	97 f9       	bld	r25, 7
 55a:	9f 67       	ori	r25, 0x7F	; 127
 55c:	80 e8       	ldi	r24, 0x80	; 128
 55e:	70 e0       	ldi	r23, 0x00	; 0
 560:	60 e0       	ldi	r22, 0x00	; 0
 562:	08 95       	ret

00000564 <__fp_nan>:
 564:	9f ef       	ldi	r25, 0xFF	; 255
 566:	80 ec       	ldi	r24, 0xC0	; 192
 568:	08 95       	ret

0000056a <__fp_pscA>:
 56a:	00 24       	eor	r0, r0
 56c:	0a 94       	dec	r0
 56e:	16 16       	cp	r1, r22
 570:	17 06       	cpc	r1, r23
 572:	18 06       	cpc	r1, r24
 574:	09 06       	cpc	r0, r25
 576:	08 95       	ret

00000578 <__fp_pscB>:
 578:	00 24       	eor	r0, r0
 57a:	0a 94       	dec	r0
 57c:	12 16       	cp	r1, r18
 57e:	13 06       	cpc	r1, r19
 580:	14 06       	cpc	r1, r20
 582:	05 06       	cpc	r0, r21
 584:	08 95       	ret

00000586 <__fp_round>:
 586:	09 2e       	mov	r0, r25
 588:	03 94       	inc	r0
 58a:	00 0c       	add	r0, r0
 58c:	11 f4       	brne	.+4      	; 0x592 <__fp_round+0xc>
 58e:	88 23       	and	r24, r24
 590:	52 f0       	brmi	.+20     	; 0x5a6 <__fp_round+0x20>
 592:	bb 0f       	add	r27, r27
 594:	40 f4       	brcc	.+16     	; 0x5a6 <__fp_round+0x20>
 596:	bf 2b       	or	r27, r31
 598:	11 f4       	brne	.+4      	; 0x59e <__fp_round+0x18>
 59a:	60 ff       	sbrs	r22, 0
 59c:	04 c0       	rjmp	.+8      	; 0x5a6 <__fp_round+0x20>
 59e:	6f 5f       	subi	r22, 0xFF	; 255
 5a0:	7f 4f       	sbci	r23, 0xFF	; 255
 5a2:	8f 4f       	sbci	r24, 0xFF	; 255
 5a4:	9f 4f       	sbci	r25, 0xFF	; 255
 5a6:	08 95       	ret

000005a8 <__fp_split3>:
 5a8:	57 fd       	sbrc	r21, 7
 5aa:	90 58       	subi	r25, 0x80	; 128
 5ac:	44 0f       	add	r20, r20
 5ae:	55 1f       	adc	r21, r21
 5b0:	59 f0       	breq	.+22     	; 0x5c8 <__fp_splitA+0x10>
 5b2:	5f 3f       	cpi	r21, 0xFF	; 255
 5b4:	71 f0       	breq	.+28     	; 0x5d2 <__fp_splitA+0x1a>
 5b6:	47 95       	ror	r20

000005b8 <__fp_splitA>:
 5b8:	88 0f       	add	r24, r24
 5ba:	97 fb       	bst	r25, 7
 5bc:	99 1f       	adc	r25, r25
 5be:	61 f0       	breq	.+24     	; 0x5d8 <__fp_splitA+0x20>
 5c0:	9f 3f       	cpi	r25, 0xFF	; 255
 5c2:	79 f0       	breq	.+30     	; 0x5e2 <__fp_splitA+0x2a>
 5c4:	87 95       	ror	r24
 5c6:	08 95       	ret
 5c8:	12 16       	cp	r1, r18
 5ca:	13 06       	cpc	r1, r19
 5cc:	14 06       	cpc	r1, r20
 5ce:	55 1f       	adc	r21, r21
 5d0:	f2 cf       	rjmp	.-28     	; 0x5b6 <__fp_split3+0xe>
 5d2:	46 95       	lsr	r20
 5d4:	f1 df       	rcall	.-30     	; 0x5b8 <__fp_splitA>
 5d6:	08 c0       	rjmp	.+16     	; 0x5e8 <__fp_splitA+0x30>
 5d8:	16 16       	cp	r1, r22
 5da:	17 06       	cpc	r1, r23
 5dc:	18 06       	cpc	r1, r24
 5de:	99 1f       	adc	r25, r25
 5e0:	f1 cf       	rjmp	.-30     	; 0x5c4 <__fp_splitA+0xc>
 5e2:	86 95       	lsr	r24
 5e4:	71 05       	cpc	r23, r1
 5e6:	61 05       	cpc	r22, r1
 5e8:	08 94       	sec
 5ea:	08 95       	ret

000005ec <__fp_zero>:
 5ec:	e8 94       	clt

000005ee <__fp_szero>:
 5ee:	bb 27       	eor	r27, r27
 5f0:	66 27       	eor	r22, r22
 5f2:	77 27       	eor	r23, r23
 5f4:	cb 01       	movw	r24, r22
 5f6:	97 f9       	bld	r25, 7
 5f8:	08 95       	ret

000005fa <__mulsf3>:
 5fa:	0e 94 10 03 	call	0x620	; 0x620 <__mulsf3x>
 5fe:	0c 94 c3 02 	jmp	0x586	; 0x586 <__fp_round>
 602:	0e 94 b5 02 	call	0x56a	; 0x56a <__fp_pscA>
 606:	38 f0       	brcs	.+14     	; 0x616 <__mulsf3+0x1c>
 608:	0e 94 bc 02 	call	0x578	; 0x578 <__fp_pscB>
 60c:	20 f0       	brcs	.+8      	; 0x616 <__mulsf3+0x1c>
 60e:	95 23       	and	r25, r21
 610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1c>
 612:	0c 94 ac 02 	jmp	0x558	; 0x558 <__fp_inf>
 616:	0c 94 b2 02 	jmp	0x564	; 0x564 <__fp_nan>
 61a:	11 24       	eor	r1, r1
 61c:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_szero>

00000620 <__mulsf3x>:
 620:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__fp_split3>
 624:	70 f3       	brcs	.-36     	; 0x602 <__mulsf3+0x8>

00000626 <__mulsf3_pse>:
 626:	95 9f       	mul	r25, r21
 628:	c1 f3       	breq	.-16     	; 0x61a <__mulsf3+0x20>
 62a:	95 0f       	add	r25, r21
 62c:	50 e0       	ldi	r21, 0x00	; 0
 62e:	55 1f       	adc	r21, r21
 630:	62 9f       	mul	r22, r18
 632:	f0 01       	movw	r30, r0
 634:	72 9f       	mul	r23, r18
 636:	bb 27       	eor	r27, r27
 638:	f0 0d       	add	r31, r0
 63a:	b1 1d       	adc	r27, r1
 63c:	63 9f       	mul	r22, r19
 63e:	aa 27       	eor	r26, r26
 640:	f0 0d       	add	r31, r0
 642:	b1 1d       	adc	r27, r1
 644:	aa 1f       	adc	r26, r26
 646:	64 9f       	mul	r22, r20
 648:	66 27       	eor	r22, r22
 64a:	b0 0d       	add	r27, r0
 64c:	a1 1d       	adc	r26, r1
 64e:	66 1f       	adc	r22, r22
 650:	82 9f       	mul	r24, r18
 652:	22 27       	eor	r18, r18
 654:	b0 0d       	add	r27, r0
 656:	a1 1d       	adc	r26, r1
 658:	62 1f       	adc	r22, r18
 65a:	73 9f       	mul	r23, r19
 65c:	b0 0d       	add	r27, r0
 65e:	a1 1d       	adc	r26, r1
 660:	62 1f       	adc	r22, r18
 662:	83 9f       	mul	r24, r19
 664:	a0 0d       	add	r26, r0
 666:	61 1d       	adc	r22, r1
 668:	22 1f       	adc	r18, r18
 66a:	74 9f       	mul	r23, r20
 66c:	33 27       	eor	r19, r19
 66e:	a0 0d       	add	r26, r0
 670:	61 1d       	adc	r22, r1
 672:	23 1f       	adc	r18, r19
 674:	84 9f       	mul	r24, r20
 676:	60 0d       	add	r22, r0
 678:	21 1d       	adc	r18, r1
 67a:	82 2f       	mov	r24, r18
 67c:	76 2f       	mov	r23, r22
 67e:	6a 2f       	mov	r22, r26
 680:	11 24       	eor	r1, r1
 682:	9f 57       	subi	r25, 0x7F	; 127
 684:	50 40       	sbci	r21, 0x00	; 0
 686:	9a f0       	brmi	.+38     	; 0x6ae <__mulsf3_pse+0x88>
 688:	f1 f0       	breq	.+60     	; 0x6c6 <__mulsf3_pse+0xa0>
 68a:	88 23       	and	r24, r24
 68c:	4a f0       	brmi	.+18     	; 0x6a0 <__mulsf3_pse+0x7a>
 68e:	ee 0f       	add	r30, r30
 690:	ff 1f       	adc	r31, r31
 692:	bb 1f       	adc	r27, r27
 694:	66 1f       	adc	r22, r22
 696:	77 1f       	adc	r23, r23
 698:	88 1f       	adc	r24, r24
 69a:	91 50       	subi	r25, 0x01	; 1
 69c:	50 40       	sbci	r21, 0x00	; 0
 69e:	a9 f7       	brne	.-22     	; 0x68a <__mulsf3_pse+0x64>
 6a0:	9e 3f       	cpi	r25, 0xFE	; 254
 6a2:	51 05       	cpc	r21, r1
 6a4:	80 f0       	brcs	.+32     	; 0x6c6 <__mulsf3_pse+0xa0>
 6a6:	0c 94 ac 02 	jmp	0x558	; 0x558 <__fp_inf>
 6aa:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_szero>
 6ae:	5f 3f       	cpi	r21, 0xFF	; 255
 6b0:	e4 f3       	brlt	.-8      	; 0x6aa <__mulsf3_pse+0x84>
 6b2:	98 3e       	cpi	r25, 0xE8	; 232
 6b4:	d4 f3       	brlt	.-12     	; 0x6aa <__mulsf3_pse+0x84>
 6b6:	86 95       	lsr	r24
 6b8:	77 95       	ror	r23
 6ba:	67 95       	ror	r22
 6bc:	b7 95       	ror	r27
 6be:	f7 95       	ror	r31
 6c0:	e7 95       	ror	r30
 6c2:	9f 5f       	subi	r25, 0xFF	; 255
 6c4:	c1 f7       	brne	.-16     	; 0x6b6 <__mulsf3_pse+0x90>
 6c6:	fe 2b       	or	r31, r30
 6c8:	88 0f       	add	r24, r24
 6ca:	91 1d       	adc	r25, r1
 6cc:	96 95       	lsr	r25
 6ce:	87 95       	ror	r24
 6d0:	97 f9       	bld	r25, 7
 6d2:	08 95       	ret

000006d4 <_exit>:
 6d4:	f8 94       	cli

000006d6 <__stop_program>:
 6d6:	ff cf       	rjmp	.-2      	; 0x6d6 <__stop_program>
